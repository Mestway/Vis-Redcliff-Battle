
		var sankey = d3.sankey()
	    .size([ST_width, ST_height])
	    .nodeWidth(10)
	    .nodePadding(10);

		sankey.nodes(ST_graph.nodes)
			.links(ST_graph.links)
			.layout(32);

		var path = sankey.link();


		var svg = d3.select("#storyline").append("svg")
		    .attr("width", ST_width + ST_margin.left + ST_margin.right)
		    .attr("height", ST_height + ST_margin.top + ST_margin.bottom)
		  	.append("g")
		    .attr("transform", "translate(" + ST_margin.left + "," + ST_margin.top + ")");

		var link = svg.append("g").selectAll(".ST_link")
					.data(ST_graph.links)
					.enter().append("path")
					.attr("class", "ST_link")
					.attr("d", path)
					.style("stroke-width", function(d) { return Math.max(1, d.dy / 2); })
					.sort(function(a, b) { return b.dy - a.dy; });

	  	link.append("title")
	      .text(function(d) { return d.source.name + " â†’ " + d.target.name + "\n" + format(d.value); });

		var node = svg.append("g").selectAll(".ST_node")
		  .data(ST_graph.nodes)
		.enter().append("g")
		  .attr("class", "ST_node")
		  .attr("transform", function(d) {console.log(d); return "translate(" + d.x + "," + d.y + ")"; })
		.call(d3.behavior.drag()
		  .origin(function(d) { return d; })
		  .on("dragstart", function() { this.parentNode.appendChild(this); })
		  .on("drag", dragmove));

		node.append("rect")
			.attr("height", function(d) { return d.dy; })
			.attr("width", sankey.nodeWidth())
			.style("fill", function(d) { return d.color = color(d.name.replace(/ .*/, "")); })
			.style("stroke", function(d) { return d3.rgb(d.color).darker(2); })
			.append("title")
			.text(function(d) { return d.name + "\n" + format(d.value); });

		node.append("text")
			.attr("x", -6)
			.attr("y", function(d) { return d.dy / 2; })
			.attr("dy", ".35em")
			.attr("text-anchor", "end")
			.attr("transform", null)
			.text(function(d) { return d.name; })
			.filter(function(d) { return d.x < width / 2; })
			.attr("x", 6 + sankey.nodeWidth())
			.attr("text-anchor", "start");

		function dragmove(d) {
			d3.select(this).attr("transform", "translate(" + d.x + "," + (d.y = Math.max(0, Math.min(ST_height - d.dy, d3.event.y))) + ")");
			sankey.relayout();
			link.attr("d", path);
	  	}